version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: ruyu-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-123456}
      MYSQL_DATABASE: blog
      MYSQL_USER: blog_user
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-blog123456}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - ruyu-network

  # Redis 缓存
  redis:
    image: redis:7.2.3-alpine
    container_name: ruyu-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - ruyu-network

  # RabbitMQ 消息队列
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: ruyu-rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-admin123}
    ports:
      - "5672:5672"
      - "15672:15672"  # 管理界面
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ruyu-network

  # Minio 对象存储
  minio:
    image: minio/minio:latest
    container_name: ruyu-minio
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin123}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - ruyu-network

  # 后端服务
  backend:
    build:
      context: ./blog-backend
      dockerfile: Dockerfile
    container_name: ruyu-backend
    restart: always
    ports:
      - "8088:8088"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/blog?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Hong_Kong
      SPRING_DATASOURCE_USERNAME: blog_user
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD:-blog123456}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_USER:-admin}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-admin123}
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minioadmin123}
    depends_on:
      - mysql
      - redis
      - rabbitmq
      - minio
    networks:
      - ruyu-network

  # 前端博客
  frontend-blog:
    build:
      context: ./blog-frontend/kuailemao-blog
      dockerfile: Dockerfile
    container_name: ruyu-frontend-blog
    restart: always
    volumes:
      - frontend_blog_dist:/app/dist
    networks:
      - ruyu-network

  # 前端管理后台
  frontend-admin:
    build:
      context: ./blog-frontend/kuailemao-admin
      dockerfile: Dockerfile
    container_name: ruyu-frontend-admin
    restart: always
    volumes:
      - frontend_admin_dist:/app/dist
    networks:
      - ruyu-network

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: ruyu-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - frontend_blog_dist:/var/www/blog:ro
      - frontend_admin_dist:/var/www/admin:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL证书目录（可选）
    depends_on:
      - backend
      - frontend-blog
      - frontend-admin
    networks:
      - ruyu-network

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:
  minio_data:
  frontend_blog_dist:
  frontend_admin_dist:

networks:
  ruyu-network:
    driver: bridge