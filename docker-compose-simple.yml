version: '3.8'

services:
  # 数据库服务
  mysql:
    image: mysql:8.0
    container_name: blog-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: blog
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - blog-network

  # Redis缓存
  redis:
    image: redis:7.2.3
    container_name: blog-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - blog-network

  # RabbitMQ消息队列
  rabbitmq:
    image: rabbitmq:3-management
    container_name: blog-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: 123456
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - blog-network

  # MinIO对象存储
  minio:
    image: minio/minio:latest
    container_name: blog-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: 12345678
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - blog-network

  # 后端API服务
  blog-backend:
    build:
      context: ./blog-backend
      dockerfile: Dockerfile
    container_name: blog-backend
    restart: unless-stopped
    ports:
      - "8088:8088"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mysql
      - redis
      - rabbitmq
      - minio
    networks:
      - blog-network
    volumes:
      - backend_logs:/app/logs

  # 前台博客
  blog-frontend:
    build:
      context: ./blog-frontend/kuailemao-blog
      dockerfile: Dockerfile
    container_name: blog-frontend
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - blog-backend
    networks:
      - blog-network

  # 后台管理
  blog-admin:
    build:
      context: ./blog-frontend/kuailemao-admin
      dockerfile: Dockerfile
    container_name: blog-admin
    restart: unless-stopped
    ports:
      - "8081:80"
    depends_on:
      - blog-backend
    networks:
      - blog-network

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:
  minio_data:
  backend_logs:

networks:
  blog-network:
    driver: bridge